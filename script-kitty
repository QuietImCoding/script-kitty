#!/bin/bash

_find_repo_name() {
    unslashed=$(echo "$1" | rev | cut -d'/' -f1 | rev)
    echo $unslashed | cut -d'@' -f1
}

_find_bash_config() {
    if [[ -f ~/.bash_profile ]]; then echo "$HOME/.bash_profile";
    else echo "$HOME/.bashrc"; fi
}

_kitty_install() {
    conf=$(_find_bash_config)
    if grep -q "SCRIPT_KITTY_MAGIC_YARNBALL" $conf; then
	kitty update
	kitty add $1
	kitty pull
    else
	KITTY_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
	export KITTY_HOME
	echo "## SCRIPT_KITTY_MAGIC_YARNBALL ##" >> $con
	echo "export KITTY_HOME=$KITTY_HOME" >> $conf
	read -p "Kitty needs a github: " KITTY_USER
	echo "export KITTY_USER=$KITTY_USER" >> $conf
	echo "source $KITTY_HOME/script-kitty" >> $conf
	echo "## END_MAGIC_YARNBALL ##" >> $conf
	touch "$KITTY_HOME/.kitty_yarn"
	mkdir "$KITTY_HOME/yarn_pile"
    fi
}

_lookup_yarnstore() {
    echo "$(grep "$1\t" "$KITTY_HOME/.yarn_stores" | rev | cut -d$'\t' -f1 | rev)"
}

_kitty_pull() {
    echo "Kitty is tugging on loose ends..."
    conf="$(_find_bash_config)"
    for yarnball in $(cat "$KITTY_HOME/.kitty_yarn"); do
	yarn_name="$(_find_repo_name $yarnball)"
	yarn_loc="$(echo $yarnball | cut -d'@' -f1)"
	yarn_dir="$KITTY_HOME/yarn_pile/$cleaned_yarn"
	if [[ -d "$yarn_dir" ]]; then
	    owd=$(pwd)
	    cd "$yarn_dir" || continue
	    git pull &>/dev/null
	    cd $owd
	    echo " - Updated $yarnball"
	else
	    owd=$(pwd)
	    kitty_end="## END_MAGIC_YARNBALL ##"
	    src_yarn="source $KITTY_HOME/yarn_pile/$yarn_name/$yarn_name"
	    kitty_domain="https://github.com"
	    if echo "$yarnball" | grep -q '@'; then
		kitty_domain="$(_lookup_yarnstore $(echo $yarnball | rev | cut -d'@' -f1 | rev))"
	    fi
	    cd "$KITTY_HOME/yarn_pile" || continue
	    if echo "$yarnball" | grep -q '/'; then
		git clone "$kitty_domain/$yarn_loc" >>"$KITTY_HOME/.kitty_log.git" ||
		    echo " - Kitty could not find '$yarnball' *sad kitty*" &&
			cd $owd && continue
	    else
		git clone "$kitty_domain/$KITTY_USER/$yarn_name.git" >>"$KITTY_HOME/.kitty_log" ||
		    echo " - Kitty could not find '$yarnball' *sad kitty*" &&
			cd $owd && continue
	    fi
	    cd $owd
	    # This statement is so janky but MacOS sed is terrible
	    # and I don't want to do different things depending on the sed version
	    sed -i '' "s:$kitty_end:$src_yarn\\$(printf '\n')
$kitty_end:g" $conf
	    echo " - Kitty grabbed $yarnball"
	fi
    done
}

_kitty_remove() {
    if grep -q "$1" "$KITTY_HOME/.kitty_yarn"; then
	conf="$(_find_bash_config)"
	cleaned_yarn="$(_find_repo_name $1)"
	if [[ $(wc -l < "$KITTY_HOME/.kitty_yarn") -eq 1 ]]; then
	    echo > "$KITTY_HOME/.kitty_yarn"
	else
	    grep -v $1 "$KITTY_HOME/.kitty_yarn" > .tempkitty &&
		mv .tempkitty "$KITTY_HOME/.kitty_yarn"
	    grep -v "$KITTY_HOME/yarn_pile/$cleaned_yarn" "$conf" > .tempkitty &&
		mv .tempkitty "$conf"
	fi
	if [[ -d "$KITTY_HOME/yarn_pile/$cleaned_yarn" ]]; then
	    rm -rf "$KITTY_HOME/yarn_pile/$cleaned_yarn"
	fi
	echo "Kitty threw $1 out the window"
    else
	echo "Kitty couldn't find $1.... Kitty is confused"
    fi
}

_kitty_list() {
    echo "Your kitty has the following yarn balls:"
    for l in $(cat $KITTY_HOME/.kitty_yarn); do
	echo " - $l"
    done
}


_kitty_add() {
    if $(grep -q $1 "$KITTY_HOME/.kitty_yarn"); then
	echo "Yarnball already installed!!"
    else
	echo $1 >> "$KITTY_HOME/.kitty_yarn"
	echo "Added yarnball $1"
    fi
}

_kitty_update() {
    source "$KITTY_HOME/script-kitty"
    echo "Updated script-kitty!!"
}

_kitty_open() {
    cleaned_yarn="$(_find_repo_name $1)"
    open_yarn="$KITTY_HOME/yarn_pile/$cleaned_yarn/$cleaned_yarn"
    $EDITOR $open_yarn 2>/dev/null ||
	echo "Could not open $cleaned_yarn... is your \$EDITOR variable set?"
}

_kitty_addstore() {
    if [[ ${#@} -eq 0 ]]; then
	read -p "Name of yarn store: " storename
	read -p "Store address: " storeaddress
    else
	storename="$1"
	storeaddress="$2"
    fi
    printf "$storename\t$storeaddress\n" >> "$KITTY_HOME/.yarn_stores"
}

kitty() {
    cmd=$1
    shift
    case $cmd in
	'add') 	_kitty_add $@;;
	'remove') _kitty_remove $@;;
	'list') _kitty_list $@;;
	'pull') _kitty_pull $@;;
	'update') _kitty_update $@;;	
	'install') _kitty_install $@;;
	'open') _kitty_open $@;;
	'addstore') _kitty_addstore $@;;
	*) cat <<EOF
Usage: kitty [cmd] [args]:
       Valid commands are:
       	     * add [ repo ] - adds a new yarnball
	     * remove [ repo ] - removes a yarnball
	     * list - lists all stored yarn balls
	     * pull - pulls balls of yarn from the cloud
	     * install - does the initial set up or will add + pull
EOF
    esac
}
